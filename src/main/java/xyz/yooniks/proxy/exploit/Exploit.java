package xyz.yooniks.proxy.exploit;

import org.spacehq.packetlib.packet.Packet;
import xyz.yooniks.proxy.user.ProxyUser;

public abstract class Exploit implements Runnable {

  final int amount;
  final Packet mainPacket;
  final boolean bots;

  final ProxyUser executor;

  Exploit(ProxyUser executor, int amount, boolean bots, Packet mainPacket) {
    this.amount = amount;
    this.bots = bots;
    this.executor = executor;
    this.mainPacket = mainPacket;
  }

  @Override
  public void run() {
    if (this.bots) {
      for (int count = 0; count < this.amount; count++) {
        this.executor.getBots().stream()
            .map(Bot::getSession)
            .forEach(bot -> bot.send(this.mainPacket));
      }
      return;
    }
    for (int count = 0; count < this.amount; count++) {
      if (!this.executor.asPlayer().isPresent()) {
        break;
      }
      this.executor.asPlayer().ifPresent((player) ->
          player.getSession().send(this.mainPacket)
      );
    }
  }

  public abstract void onStart();

}
